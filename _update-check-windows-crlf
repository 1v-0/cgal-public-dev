#!/bin/bash
#
# An "update" hook which rejects any update containing CRLF.
#
# Author: Gerhard Gappmeier, ascolab GmbH
# Author: Colin Mollenhour
#
# This script is based on the update.sample in git/contrib/hooks.
# You are free to use this script for whatever you want.
#
# Modified by Eric Berberich <eric.berberich@cgal.org>
# Taken from https://gist.github.com/1248871

BINARY_REGEX='\.(pdb|dll|exe|png|gif|jpg|mwb|zip|tgz|gz|bz2|7z|rar|swf|fla|jar|mo|ttf|foo|mp3|icc|pdf|bmp|wmf)$'
NO_EXTENSION_REGEX='/\w+$'
OVERRIDE_REGEX='Contains CRLF'

refname="$1"
oldrev="$2"
newrev="$3"
BADREV="0000000000000000000000000000000000000000"

[ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ] && \
  { echo "Usage: $0 <ref> <oldrev> <newrev>" >&2; exit 1; }

# Skip checks on branch deletions
[ "$newrev" = "$BADREV" ] && exit 0

# Skip checks on tag pushes
[[ $refname =~ ^refs\/tags\/ ]] && exit 0

FIRST=""
ERRORS=""
CR=$(printf "\r")
for rev in $(git rev-list --reverse "$newrev" $(git for-each-ref --format='%(refname)' "refs/heads/*" | sed 's/^/\^/'))
do
  # skip when commit mesage contains override
  MESSAGE=$(git show -s --format=format:"%s" $rev)
  [[ $MESSAGE =~ $OVERRIDE_REGEX ]] && continue

  IS_BAD=0
  while read old_mode new_mode old_sha1 new_sha1 status name
  do
    # skip lines showing parent commit and deletions
    [[ -z "$new_sha1" ]] || [ "$new_sha1" = "$BADREV" ] && continue

    # don't do a CRLF check for binary files
    [[ $name =~ $BINARY_REGEX ]] && continue

    # Skip pngs without extensions
    if [[ $name =~ $NO_EXTENSION_REGEX ]] && git cat-file blob $new_sha1 | head -n 1 | grep -Fq "PNG"; then
      continue
    fi

    # check for CRLF
    if git cat-file blob $new_sha1 | grep -Eq "$CR$"; then
      if [ "$FIRST" = "" ]; then FIRST=$rev; fi
      if [ $IS_BAD -eq 0 ]; then IS_BAD=1; ERRORS="${ERRORS}CRLF DETECTED IN ${rev:0:7}:\n"; fi
      ERRORS="${ERRORS}   $name\n"
    fi
  done < <(git diff-tree -r "$rev")
done

if [ "$FIRST" != "" ]; then
  echo "###################################################################"
  echo "# One or more files contained CRLF (Windows) line endings which are"
  echo "# not allowed. Activate the autocrlf feature and/or change the line"
  echo "# endings to LF before committing and before trying to push. You   "
  echo "# will have to amend your existing commits to not contain CRLF.    "
  echo "# \"git config core.autocrlf true\" to activate CRLF conversion."
  echo "# \"git commit --amend\" to change your most recent commit."
  echo "# \"git rebase -i ${FIRST:0:7}^\" to change all commits."
  echo "#"
  echo "# You might also consider to install a pre-commit hook"
  echo "# to your repository, in order to get notified about"
  echo "# this problem earlier."
  echo "###################################################################"
  echo -e "$ERRORS"
  exit 1
fi
