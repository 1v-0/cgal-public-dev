namespace CGAL {

/*!

\mainpage 2D Visibility  
\anchor Chapter_2D_Visibility_Computation
\cgalAutoToc

\authors Michael Hemmer, Kan Huang, Francisc Bungiu

\section visibility_2_introduction Introduction

\cgalFigureBegin{example_figure,visibility-teaser.png}
An example figure. 
\cgalFigureEnd

Given a polygonal region \f$ P \f$, which may have holes, and  two points \f$ p \f$ , \f$ q \f$, in general \f$ p \f$ is said to be visible from \f$ q \f$ iff any inner point on segment joining \f$ p \f$ and \f$ q \f$ is "transparent".  The set of points that are visible from \f$ q \f$ is defined as the visibility region of \f$ q \f$.  

\cgalFigureBegin{definition-fig, definition.png}
\cgalFigureEnd
Look at Figure \cgalFigureRef{definition-fig}. Part(1) is a polygon \f$ P \f$ with hole \f$ H \f$. The blue polygon apparently is the visibility region of \f$ q \f$ in \f$ P \f$. In some degenerate situations, the definition of visibility is not that clear. For example, in Part(2), \f$ H \f$ shrinks to a segment which is collinear to \f$ q \f$ and vertex \f$ a \f$ moves to the segment joining \f$ q \f$ and \f$ b \f$. As a result, there are two "needles" in the visibility region of \f$ q \f$: \f$ ed \f$ is an inward "needle"; \f$ bc \f$ is an outward one. 


We proceed to define "transparency" so that these "needles" are naturally contained.
Given a polygon \f$ P \f$, which may have proper holes, degenerate holes(isolated edges and isolated vertices), there are two types of points that is transparent with respect to point \f$ q \f$.
-  interior of \f$ P \f$.
-  vertex \f$ v \f$ if \f$ v \f$ is not isolated and all edges incident to \f$ v \f$ is in the same open half plane defined by line \f$ vq \f$ except \f$v\f$ itself.


The visibility region based on the definition of transparency above is denoted by \f$ V \f$. In many cases the user is just interested in the regularized visibility area \f$ \overline{V} \f$.Also for some algorithms it's actually easier to provide \f$ \overline{V}  \f$ only. Thus, some visibility computation strategies in this package offer to compute the regularized visibility
area \f$ \overline{V} \f$ directly.

To sum up, this package provides two kinds of visibility region: 
- Non-regularized visibility area \f$ V \f$.
- Regularized visibility area \f$ \overline{V} \f$. 


\section visibility_2_classes Classes and Algorithms

CGAL provides three class templates that follow the `Visibility_2` concept:
Class 	                	|	Function                                     |  Have Preprocessing                |  Query                            |Algorithm
-------------------------------|-----------------------------------------------------|-------------------------------|-----------------------------------|-------------------------------
 `Simple_visibility_2`       | compute visibility in simple polygons                  |       No                     |\f$ O(n) \f$ time and \f$ O(n) \f$ space  | paper of B.Joe and R.B.Simpson \cite cgal:bjrb-clvpa-87
 `Naive_visibility_2`        |  compute visibility in an arbitrary arrangement of segments. | No                     | \f$ O(n\log n) \f$ time and \f$ O(n) \f$ space |  paper of T.Asano \cite cgal:ta-aeafvpprh-85 
 `Preprocessed_visibility_2` | visibility query in arbitrary arrangement of segments.       | Yes. \f$ O(n^2) \f$ time and \f$ O(n^2) \f$ space | \f$ O(n) \f$ time and \f$ O(n) \f$ space   | paper of Takao Asano, Tetsuo Asano  etc \cite cgal:aaghi-vpsesp-85

where  \f$ n \f$ is the number of vertices of input polygon.

Every templates has two parameters, `Arrangement_2` and `Regularization_tag`. User can attach an instance of `Arrangement_2` as the polygonal environment. `Regularization_tag` indicates whether the result should be regularized or not. 

Each class has two overloads of `visibility_region` functions to compute the visibility region of \f$ p \f$ in a face \f$ F \f$. \f$ F \f$ should be bounded. One function is for case that \f$ p \f$ is in the interior of \f$ F \f$. The other is for case that \f$ p \f$ is on the boundary of \f$ F \f$. The answer is an instance of `Arrangement_2` that consists of edges on the boundary of visibility region.

\section simple_visibility_example  Example of visibility in a simple polygon.
\cgalFigureBegin{example1-fig, example1.png}
\cgalFigureEnd
The following example shows how to obtain the visibility region of Figure \cgalFigureRef{example1-fig} and the difference between regularized and non-regularized visibility.
\cgalExample{Visibility_2/simple_visibility_2.cpp}

*/

}

